<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DgAACw4BQL7hQQAAEZtJREFUeF7tnQewxUQVhrEX7NgrFiyAKIo6FlBAsYMioKjIUMRxLIi9j4DSFBHF
        XlBQR2XGruCoCNLEriBW7KKCihVEsfy/Q5xD+HOze+8md3Pf/818M2/ey03O5iU3yWbP2XWMMcYYY4wx
        xhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjBmSK1bgFSrx8pV4
        uUpcc2wGXwm/CH8ML4T/sXaG/4C/gSfBQ+DmcOVOnh3h96HaAdbm+j34JDj5E2V9eCpUjbR2UXls3RZO
        El4Kz4OqYdaW8o9wKzgp7gcvgqpB1pb273BLOAluBc+FqiHWDiWvJJO43ToFqgZYO7R8Jqn6wX17qAKf
        5cXWzlAdM7PcBVbLWVAFHf0T3BduCPlyzJhZ8EXuRnB/+Geojqnod2GVbApVwFH2X/MZxZh5uDVMeZ92
        X1gdvCqoYBt59vO9iDGLcBv4V6iOscaDYHUcD1WwjRxiYkwJDoTqGGs8EVbHD6AKtvHO0JgS3BWqY6zx
        17A6/gJVsI1XhsaU4CpQHWONfEldHSrQqDElUcdYtDpUkFFjSqKOsWh1qCCjxpREHWPR6lBBRo0piTrG
        otWhgowaUxJ1jEWrQwUZNaYk6hiLVocKMmpMSdQxFq0OFWTUmJKoYyxaHSrIqDElUcdYtDpUkFFjSqKO
        sWh1qCCjpizMnGMe9mvhafB38F+XyJ/5O/6Ny6xiETZ1jEWrQwUZNWVg5cM94Y+g2s9KLrs75GdXBdXO
        aHWoIKNmcW4PvwLV/k3xdLgBXAVU+6LVoYKMmsV4EExJOe2T63ggnDqqbdHqUEFGzfzw5ChZZ4zrmvpJ
        otoVrQ4VZNTMB2+JSlw52rJ4xu3gVFFtilaHCjJq8uFDNZ8b1P4sIXu6ptrDpdoTrQ4VZNTksxtU+7Kk
        rJI+RVRbotWhgoyaPPjN3pfnT5nqzIIYG8NmQiDm/78K9lX/oCzFNEVUW6LVoYKMmjy2gGo/Rvl+Y1Y9
        Wj6/nA3VZ6MsNj41VDui1aGCjJo8Xg3Vfmzk1SHlIZsnyd+gWkdjlXWkelDtiFaHCjJq8uCUY2o/Nh4A
        UzkYqnU0ckq8qaHaEa0OFWTU5PFbqPZj411gKneDah2NVdaR6kG1I1odKsioyYOTV6r92MjaUKlcFap1
        NFZZR6oH1Y5odaggoyaPkifI1aBaRyNnaJoaqh3R6lBBRk0enPpY7cdGVtNPhdNvq3U0ngOnhmpHtDpU
        kNEpwtGzH4bsBeIUX++BN4djwAdntR8bOWd4KodCtY7GE+DUUO2IVocKMjo1OJiP45Xa7WAy0iZwaPp6
        ni6Ad4R9cKKiC6FaR2NOj1gtqHZEq0MFGZ0ST4SzngF4SzL0XCecBEZtO/pTeCfYBU8OLqM+G703nBqq
        HdHqUEFGp8KLoIq/LWc6uj4cEk4nprYd5dWBqbX3hNe4RP58GOTDt/pM9Dtwiqi2RKtDBRmtHc6X+Cao
        Yu/yy3BdOBS8kqntlvTxcIqotkSrQwUZrZmrw49BFXefx8ErwSHggMWTodpuCdkR4OHuI6GCjNYKb5O+
        BFXMqb4XDnWgceLK86Ha7iL+AU55zkjVpmh1qCCjNcKRsClDylPkc8BQ3B/29UTlyHVxtPCUUe2KVocK
        Mlob94B9451yfT4cCp4kJa4kvHJM/eQgqm3R6lBBRmvi4bBvCHiUSUXq923/DXeFQ8Fbor5RvrPk7K+r
        Mk+9al+0OlSQ0VrYC14MVYzK90NOQLpf+N0s/wkfBoeCzzo7wzOh2r7yDPg4uEqodkarQwUZrYH9oYqt
        Sw7niA/fb4Vquba8Ot0LDg23wXTbz8NfQG6X8mf+ju0dI45loPZ7tDpUkNFlwm7Yd0MVl5L1bZ8B2/Bd
        Ccdmqc+05ZCUlKEgZj7UPo9WhwoyuiyuCT8DVUxK9vBsD7tgbgXv5dVn2/4M3gya8qj9Ha0OFWR0GdwE
        fh2qeJS/h/eBfVwHfhuqdbTls8J1oSmL2tfR6lBBRseGtzcpA/UafwLvAFO5KUxdP3uemLRkyqH2c7Q6
        VJDRMWEZG/b3qziUX4M3grnwhDoPqnW25VAWPsNMncfCb8JmHpK3wfXg2Kh9HK0OFWR0LHaAOW+dj4Uc
        ATsvHDmbUqCNvgNOFZZB7Uq84pWUhSHGRMURrQ4VZHQM9ob8ZlPbV74TshLhojwY9uWQN7JbdmpwxHLf
        YE5+KY1ZxlTFEK0OFWR0SPiuoi+ttO0rYEk4NJ1v0tW22j4dTgWmGH8DqnYoj4BDjW6OqG1Hq0MFGR0K
        Vvf4AFTbVPJN9x5wCJ4L1Tbb8iq3E6wdFntg9qRqwyzZKXFjOCRqu9HqUEFGh4DdrSw4oLan5LPCQ+GQ
        vAaqbbdlLaqtYa08BuaMV2v7KzhkKq/aZrQ6VJDR0twCMl1UbUvJkbv8Rhwa3u4dBVUMbTkxTk75nrF4
        IUy9XZwlvwSeCodAbS9aHSrIaElYdpPfUGo7SuaP3waOBR/8Pw1VLG1Z/2pWhfYx4bPDkVDFuYjvghyB
        UBK1nWh1qCCjpegqx9PlqXAZ/fTs+UnNVOQ0BvO8hynJ9WDO7WqunJ33lrAUahvR6lBBRkvQV46n7Ufg
        Mt9g88RMzSXhkBiOG1sGLJD3Q6jiUvLWiWkDOZ0j9Fy4JSyBWn+0OlSQ0UVJLcfTyO7GGibOZ4JS6u3g
        5yBzT8aEB2zOqAO+Pd8cNjCLMufdE3Nx2Nu3KGrd0epQQUbnJbccDx8uXwBrglOipabLfhCOdWKzuzvn
        isw6Xep5aRuYc5JRXn0WKZmk1hmtDhVkdB5yy/Hw0v8EWCP81k0dAvMGOCQ8AftmsGrLqxu71bvgicPM
        RfXZLjkiOp5wvNoeDdlxQflzV4qwWl+0OlSQ0Vxyy/GwuPRWsGa2g6npvi+BQ8Bv7Y9Ctc0umUmZMiSH
        6z4GqnV0ySsrU5T5HKQGfvJ3apR1e7m21aGCjOaQW47nl5C3MVPgyVC1QVn6jT+Tt3LyY/hssQ/Mhc+L
        Oc8lXJZpwupvVE0Rp5aLVocKMppKbjkeXtbHmpKgFC+Dqi1tebXZFpaAo21z3h1xeulHwnnhiIWSBe/a
        WZ5qmWh1qCCjKeSW4/kCvDacIm+Eqk1tOc3BotM0Pxrm7Nefw5w5ELvgLLw5ox1myW7o2MOnlolWhwoy
        2se85XimCh+UU+/X2UO0EZwHdsPmDBthQe6SAw2Za5Na6KLPZ8MG9fdodaggo7NYtBzPVOFI5OOhamNb
        PmflvInmsBEmaKl1dfkhOMSLVf6vXgoXHd/FW7ZmVIT6e7Q6VJBRBXtGcsb+8GFOleOZMteCqfkWfA+R
        MmyGRSJST7xGJnIN/aXzCMjeRrX9VA+HRP0tWh0qyGib0uV4pgxvac6Gqt1tT4N8P9TFBjCnB5DvjnaB
        Y8Hu3JSJgbrki02uQ/0tWh0qyGhkqHI8U4YPtKm9d5+C6r0EC1xzX6nPKPmOYdEOgHngVTOn4kzblJfH
        1aGCjDYMXY5nytwdsntV7Ye2nHE33hLtBnOGjZwFx0wBiPDLTsVU0upQQUbJPOV4hk7drA0O5+dtj9of
        bZvOioPC71L8LJw1bGRIGO+iExalWB0qyChTOMcsxzNlWIk9tceHNarU77t8MyxRyWVeOCeiiivKE+j0
        1u9yrQ4VZDRn6EGpcjxT5plQ7Zt55f5/FlwmzCpkvWIVX5S3YCnTYM+yOlSQ81i6HM+UORCqfZQrn2s4
        SmHZvBiq+KJ8F9OQO/AxWh0qyBxZjmdPaC4N87nV/kqV39ibwGXDlGIWqVAxNnJed05a2sBOhNTnsbbV
        oYJMleV4hpyVacrwVvMTUO23PnkfX0snR8rkQ8xRaZNaRqltdaggUxyrHM+U4fAPFp9Q+69LZiaWriQy
        LxvDvnF2fCejBp7yd6kFwqPVoYLsc+xyPFOGVUdSR8ZybNvQw0ZySBkx8TTYBUu1qs/MsjpUkLPkNyKz
        Bk06LJY3K7GI9/Cs/FITzAtRsUY59GRWryX/ljs8pTpUkF0uuxzPlNkQdqWmsmu0JlhwI+Wqx0GMhG37
        JGTuCp9LPw6beR6ZvKU+22V1qCCVTBSqoRzPlOGwdz708luVQ0beAmvMqmTZUXUMRPlWn/DkUAUBOfq3
        OUlYOKL99y6rQwUZrbEcjxkODkhkoTh1LDTy5WXTBc0rh1qGcnAiYZZj6gvn6lBBRmstx2OG4WCojoNo
        nHFrVkowX3Q2cJSFWqZtdaggo2btsD5kh4E6Dhp50DPtoUEtE23gZ1KmvIsvHKtABRk1awe+g1HHQJSV
        XSJqmWjk5VAtE41DVqpABRk1awNOmqP+/1F2Vbd7MdVy0QgzKpmjr5aLVpVkpwKMmtUnNddDTfaplou2
        2RWq5aKMpZoXpirAqFl9dobqfx/9KlQHrVo22obr4LrUslHGVAUquKhZbTjuKyWVeguoUMtGFczBV8tG
        GVMVY9JUcFGz2qTM38ICcl2o5aNdcFSGWj7K2JaOCixqVpcbwr5cDxaUYOWWLtRnol2wzFFfsQrGxhiX
        igosalaXlFyPw+As1Geis3gdVJ+JcjjOUlFBRc1qkpLrwVpdrPY4C/W56CyYCtBXLYcxzlvfuAgqqKhZ
        TVJyPfaGfajPRftgQQr1uehxcGmogKJm9UjJ9WAZVBbS7kN9NtoHt5FScvUhcCmoYKJmtUjN9XgUTEF9
        NpoC50FRn42eCRn76Khgoma1SMn14ARHqajPR1M5AarPR58CR6evq41zYZjVICXXg/k/nPYtFbWOaCqs
        b9xXlZKFQji7wKhw2l4VTGOJKb1MHaTkerC4dg5qHdEcjoJqHVEW5RsVzkSqAmkcPSAzCCm5Hkx+4oy6
        Oaj1RHNg+nHfnIysE901B/sg9H2rMMklThpvpklKrse+MBe1nmgu+0G1nijnuRwNTm2ggohyplKfJNMl
        JdfjHLguzEWtK5oLY2Asal2NfFa5FxyN70EVSJRXEs5nsSmspfKfSYPTv6n/aXR3OA9qXdF52AOqdUVP
        gaPBue5UEHZtyMlI5y3ppNYXnQfGkjJ/yk5wFJjEkltD1q6OW8F5UeuLzsvWUK0v+mM42msI1tpddKpf
        Oz1ZgX4RZlUqiWV/5mFWza3G58HReADs6wq0qyPndll0olWWGVXrpkyKWgRWZmSMat2N/FIftVY0T5Lz
        oQrGrpZvgIvCg1jdeXAYO+dFX5QjYHvdbVkWd1RYvIu9BCoYuxryS3A9WAKeJCwzylsqyitHiZOD8OrQ
        d+vPq0xTB3g0+ODOkvy55evtNHwunAp8zlBtiPJ5ZWmwkBeHnHDEJV/i+Dll2p4NrwynAnuqGLNqS5Rz
        1RvTCfMlmDehDp7oDrAknEv/JMhxUpQ/M8ejJDtC1Zbot6Cn6DCdMF9CHTjRk2FJDoVqO1RN7rkIKc/F
        fAtvzGVgngTzJdRB08gxTPeEpeCVQ20nuh0sBcdf9eWM8BHgGtCYS3EAVAdM9H2wJLyVUtuJnghLwpG8
        ajtRToZqzP/h1G6891cHSyP/zuVK0rdNyvyOkqS09QJY49R2ZknwyqAOlCivMKVZxglC2KOqthVldqIx
        /3um6LsvZ1r1ELncfdmolK8GSpP6vMU8d7PGYa+UOkCie8EhSCnXw2mghyClx67084+ZGHyfoQ6M6Blw
        yHpSh0C1XcoEu6FIfeezPTRrEL4JT3m7vA0cGnbl8tuazxuUt1XbwqFhtUXV5ijTxVMqRJoV4zlQHRDR
        Y+Gqw7q9qu3RfaBZQ3AUbl9KAquibwhXHVZ+76tSz6H3rCRv1givh+pAsN0eDs0agHkWfeVi7WXlPiuV
        o2Iq5mioDgDb7zHQrDhOh57fRYtImAlwEVT/fNvvedCsOMdD9c+3/b4dmhVnM8jRquoAsN3ypeoNoFkD
        cIIbTsLp2gD98pntSLj0+daNMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHG
        GGOMMcYYY4wxxhhjjDFm6qyzzn8B3HCCpZwikkoAAAAASUVORK5CYII=
</value>
  </data>
</root>